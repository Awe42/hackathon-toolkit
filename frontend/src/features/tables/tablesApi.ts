// Need to use the React-specific entry point to import `createApi`
import { createApi, fetchBaseQuery } from "@reduxjs/toolkit/query/react"

interface TablesResponse {
  tables: string[]
}

interface TableDataResponse {
  lines: string[]
}

// Define a service using a base URL and expected endpoints
export const tablesApiSlice = createApi({
  baseQuery: fetchBaseQuery({ baseUrl: "http://localhost:8000/read" }),
  reducerPath: "tablesApi",
  tagTypes: ["Tables", "TableData"],
  endpoints: build => ({
    getTables: build.query<TablesResponse, void>({
      query: () => ``,
      //providesTags: (result, error, id) => [{ type: "Tables", id }],
    }),
    getTableData: build.query<TableDataResponse, string>({
      query: (table) => `/${table}`,
      providesTags: (result, error, id) => [{ type: "TableData", id }],
    }),
  }),
})

// Hooks are auto-generated by RTK-Query
export const { useGetTablesQuery, useLazyGetTableDataQuery } = tablesApiSlice
